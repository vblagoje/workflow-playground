name: Test Workflow

on:
  pull_request_target:
    types: [opened]

jobs:
  generate-pr-description:
    runs-on: ubuntu-latest
    steps:
    - name: Generate PR description for this PR and update the PR web page
      uses: vblagoje/pr-auto@v1
      id: pr-auto-step
      with:
        openai_api_key: ${{ secrets.OPENAI_API_KEY }}
        system_prompt: https://bit.ly/pr_auto
        function_calling_model: gpt-4o

    - name: Update PR description
      uses: vblagoje/update-pr@v1
      with:
        pr-body: ${{steps.pr-auto-step.outputs.pr-text}}

  set-reno-condition:
    runs-on: ubuntu-latest
    outputs:
      generate-release-note: ${{ steps.set-output.outputs.generate-release-note }}
    steps:
      - name: Set generate-release-note output
        id: set-output
        run: |
          labels=$(jq -r '.pull_request.labels[].name' <<<"$GITHUB_EVENT")
          if echo "$labels" | grep -q "ignore-for-release-notes"; then
            echo "::set-output name=generate-release-note::false"
          else
            echo "::set-output name=generate-release-note::true"
          fi
        env:
          GITHUB_EVENT: ${{ toJson(github.event) }}

  create-pr-release-note:
    runs-on: ubuntu-latest
    needs: set-reno-condition
    steps:
      - name: Generate Release Note for this PR
        uses: vblagoje/reno-auto@v1
        if: needs.set-reno-condition.outputs.generate-release-note == 'true'
        id: reno-auto-step
        with:
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}

      - name: Create PR comment
        uses: peter-evans/create-or-update-comment@v4
        if: needs.set-reno-condition.outputs.generate-release-note == 'true'
        with:
          issue-number: ${{github.event.pull_request.number}}
          body: |
            We use reno release [notes](https://docs.openstack.org/reno/latest/) to describe the code changes in this PR. Follow these steps:

            1. Install reno via `pip install reno` (only once per virtual environment)
            2. Run this command in your terminal from the project root:
            ```
            reno new ${{steps.reno-auto-step.outputs.file-name}}
            ```
            3. This command will generate a new release note file in the `releasenotes/notes` directory.
               Paste the following release note text into that file:
            ```
            ${{steps.reno-auto-step.outputs.note}}
            ```
            4. Review the release note text, adjust if needed, and save the file.
            5. Add this file to your commit and push it to the branch.
